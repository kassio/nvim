extends elixir-phoenix

snippet def "" b
def ${1:name} do
  ${0:${VISUAL}}
end
endsnippet

snippet defi "" b
defimpl ${1:protocol_name}, for: ${2:data_type} do
  ${0:${VISUAL}}
end
endsnippet

snippet defma "" b
defmacro ${1:name} do
  ${0:${VISUAL}}
end
endsnippet

snippet defmo "" b
defmodule ${1:`!v user#elixir#module_name()`} do
  ${0:${VISUAL}}
end
endsnippet

snippet defp "" b
defp ${1:name} do
  ${0:${VISUAL}}
end
endsnippet

snippet defpr "" b
defprotocol ${1:name}, [${2:function}]
endsnippet

snippet defs "" b
defstruct ${1:field}: ${2:default_value}
endsnippet

snippet do
do
  ${0:${VISUAL}}
end
endsnippet

snippet doc "" b
@$1doc """
${0:${VISUAL}}
"""
endsnippet

snippet fn
fn ${1:args} -> $2 end
endsnippet

snippet fnb
fn
  ${1:args} -> $2
end
endsnippet

snippet rec "" b
receive do
  $1 ->
  $2
end
endsnippet

snippet test "" b
test "${1:test_name}" do
  ${0:${VISUAL}}
end
endsnippet

snippet i "" wm
IO.inspect $0
endsnippet

snippet p "" wm
IO.puts $0
endsnippet
