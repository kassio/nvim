snippet #f
	# frozen_string_literal: true

snippet #r
	# rubocop: disable CodeReuse/ActiveRecord
snippet class
	class ${1:`v:lua.vim.my.snippets.filename('camelcase')`}${2}
		${0:$VISUAL}
	end
snippet defi
	def initialize${1:(${2})}
		${0:$VISUAL}
	end
snippet deb
	require 'byebug'; byebug
snippet pry
	binding.pry
snippet prys "pry shell"
	binding.pry_shell
snippet def
	def ${1:name}
		${0:$VISUAL}
	end
snippet do
	do
		${0:$VISUAL}
	end
snippet dop
	do |${1:param}|
		${0:$VISUAL}
	end
snippet mod
	module ${1:`v:lua.vim.my.snippets.filename('camelcase')`}$2
		${0:$VISUAL}
	end
snippet hri
	puts '${1:-}' * 80
snippet hr
	puts '${1:*}' * 80
	p ${0:$VISUAL}
	puts '$1' * 80
snippet if
	if $1
		${0:$VISUAL}
	end
snippet JSON
	JSON.parse(${0:$VISUAL}${1:, symbolize_names: true})
snippet tap
	tap { |$1| ${2:p $1} }
snippet then
	then { |$1| ${2:p $1} }
